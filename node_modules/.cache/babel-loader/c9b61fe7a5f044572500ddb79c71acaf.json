{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agata\\\\Desktop\\\\4 Kurs\\\\Projekt 17\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AllQuotes, \"Sn2QGCbJGjm/GjrACrT5qb4lH3A=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Users/agata/Desktop/4 Kurs/Projekt 17/src/pages/AllQuotes.js"],"names":["useEffect","QuoteList","LoadingSpinner","useHttp","getAllQuotes","NoQuotesFound","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,YAA5B;AAA0CC,IAAAA;AAA1C,MAAmDR,OAAO,CAACC,YAAD,EAAe,IAAf,CAAhE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAIG,KAAJ,EAAW;AACP,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAGH,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAApE,CAAH,EAA2E;AACvE,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAxBD;;GAAMJ,S;UACuDH,O;;;KADvDG,S;AA0BN,eAAeA,SAAf","sourcesContent":["import {useEffect} from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport {getAllQuotes} from '../lib/api';\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\n\r\nconst AllQuotes = () => {\r\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n            <LoadingSpinner />\r\n        </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>\r\n    }\r\n\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />\r\n    }\r\n\r\n    return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;"]},"metadata":{},"sourceType":"module"}