{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agata\\\\Desktop\\\\4 Kurs\\\\Projekt 17\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"cv1Iusq+I4KeC6i/PAPIiViCiFg=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/agata/Desktop/4 Kurs/Projekt 17/src/pages/QuoteDetail.js"],"names":["Fragment","useEffect","useParams","Route","Link","useRouteMatch","HighlightedQuote","Comments","useHttp","getSingleQuote","LoadingSpinner","QuoteDetail","match","params","quoteId","sendRequest","status","data","loadedQuote","error","quote","text","author","path","url"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,aAAhC,QAAoD,kBAApD;AAEA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,YAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,KAAK,GAAGP,aAAa,EAA3B;AACA,QAAMQ,MAAM,GAAGX,SAAS,EAAxB;AAEA,QAAM;AAACY,IAAAA;AAAD,MAAYD,MAAlB;AAEA,QAAM;AAACE,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,WAA5B;AAAyCC,IAAAA;AAAzC,MAAkDX,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA/D;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,WAAW,CAACD,OAAD,CAAX;AACH,GAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;AAIA,MAAIE,MAAM,KAAK,SAAf,EAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAGG,KAAH,EAAU;AACN,wBAAO;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACC,KAAL,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACC,IAA9B;AAAoC,MAAA,MAAM,EAAED,KAAK,CAACE;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEV,KAAK,CAACW,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEX,KAAK,CAACY,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEZ,KAAK,CAACW,IAAK,WAA3B;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA3CD;;GAAMZ,W;UACYN,a,EACCH,S,EAIyCM,O;;;KANtDG,W;AA6CN,eAAeA,WAAf","sourcesContent":["import {Fragment, useEffect} from \"react\";\r\nimport {useParams, Route, Link, useRouteMatch} from 'react-router-dom';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport useHttp from '../hooks/use-http';\r\nimport {getSingleQuote} from '../lib/api';\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n\r\n    const {quoteId} = params;\r\n\r\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n            <LoadingSpinner />\r\n        </div>\r\n        );\r\n    }\r\n\r\n    if(error) {\r\n        return <p className=''></p>\r\n    }\r\n\r\n    if (!quote) {\r\n        return <p>No quote found!</p>;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={quote.text} author={quote.author}/>\r\n            <Route path={match.path} exact>\r\n                <div className=\"centered\">\r\n                    <Link className='btn--flat' to={`${match.url}/comments`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments/>\r\n            </Route>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}