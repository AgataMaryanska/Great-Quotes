{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agata\\\\Desktop\\\\4 Kurs\\\\Projekt 17\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (status === 'completed' && loadedComments) return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comments, \"UhutHWblW7V3IC7CYBhRN+7PvgE=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/agata/Desktop/4 Kurs/Projekt 17/src/components/comments/Comments.js"],"names":["useState","useEffect","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMW,MAAM,GAAGT,SAAS,EAAxB;AAEA,QAAM;AAACU,IAAAA;AAAD,MAAYD,MAAlB;AAEA,QAAM;AAACE,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC;AAA5B,MAA8CX,OAAO,CAACC,cAAD,CAA3D;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW,CAACD,OAAD,CAAX;AACH,GAFQ,EAEN,CAACA,OAAD,EAAUC,WAAV,CAFM,CAAT;;AAIA,QAAMI,sBAAsB,GAAG,MAAM;AACjCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAFD;;AAIA,QAAMQ,mBAAmB,GAAG,MAAM,CACjC,CADD;;AAGA,MAAIC,QAAJ;;AAEA,MAAIL,MAAM,KAAK,SAAf,EAA0B;AACtBK,IAAAA,QAAQ,gBACJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,MAAIL,MAAM,KAAK,WAAX,IAA0BE,cAA9B,EAEA,oBACI;AAAS,IAAA,SAAS,EAAEb,OAAO,CAACgB,QAA5B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAACV,eAAD,iBACG;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,EAOKR,eAAe,iBACZ,QAAC,cAAD;AACI,MAAA,OAAO,EAAEE,MAAM,CAACC,OADpB;AAEI,MAAA,cAAc,EAAEM;AAFpB;AAAA;AAAA;AAAA;AAAA,YARR,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAhDD;;GAAMV,Q;UAEaN,S,EAIqCG,O;;;KANlDG,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from \"../../hooks/use-http\";\nimport {getAllComments} from '../../lib/api';\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst Comments = () => {\n    const [isAddingComment, setIsAddingComment] = useState(false);\n    const params = useParams();\n\n    const {quoteId} = params;\n\n    const {sendRequest, status, data: loadedComments} = useHttp(getAllComments);\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [quoteId, sendRequest]);\n\n    const startAddCommentHandler = () => {\n        setIsAddingComment(true);\n    };\n\n    const addedCommentHandler = () => {\n    };\n\n    let comments;\n\n    if (status === 'pending') {\n        comments = (\n            <div className='centered'>\n                <LoadingSpinner/>\n            </div>\n        );\n    }\n\n    if (status === 'completed' && loadedComments)\n\n    return (\n        <section className={classes.comments}>\n            <h2>User Comments</h2>\n            {!isAddingComment && (\n                <button className='btn' onClick={startAddCommentHandler}>\n                    Add a Comment\n                </button>\n            )}\n            {isAddingComment && (\n                <NewCommentForm\n                    quoteId={params.quoteId}\n                    onAddedComment={addedCommentHandler}\n                />\n            )}\n            <p>Comments...</p>\n        </section>\n    );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}